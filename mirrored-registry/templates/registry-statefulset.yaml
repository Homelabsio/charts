{{- $dot := . }}
{{- range .Values.registries }}
{{- if .enabled }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  # name: {{ include "mirrored-registry.fullname" $dot }}-{{ .name }}
  name: {{ include "mirrored-registry.name" $dot }}-{{ .name }}
  namespace: {{ $dot.Release.Namespace }}
  labels:
    {{- include "mirrored-registry.labels" $dot | nindent 4 }}
spec:
  serviceName: {{ include "mirrored-registry.name" $dot }}-{{ .name }}
  {{- if not .autoscaling.enabled }}
  replicas: {{ .replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: mirrored-registry
      registry: {{ .name }}
  template:
    metadata:
      labels:
        app: mirrored-registry
        registry: {{ .name }}
    spec:
      containers:
      - name: registry
        image: "registry:{{ .image.tag | default $dot.Chart.AppVersion }}"
        ports:
        - name: http
          containerPort: 5000
        resources:
          {{- toYaml $dot.Values.resources.registry | nindent 10 }}
        volumeMounts:
        {{- if eq $dot.Values.storage.type "filesystem" }}
        - mountPath: "/var/lib/registry"
          name: {{ include "mirrored-registry.name" $dot }}-{{ .name }}-vol
        {{- end }}
        - mountPath: "/etc/docker/registry/"
          name: config-map
      volumes:
        - name: config-map
          configMap:
            name: {{ include "mirrored-registry.name" $dot }}-{{ .name }}-config
            items:
              - key: config.yml
                path: config.yml
  {{- if eq $dot.Values.storage.type "filesystem" }}
  volumeClaimTemplates:
  - metadata:
      name: {{ include "mirrored-registry.name" $dot }}-{{ .name }}-vol
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: {{ .storage.size | default "5Gi" }}
      storageClassName: local-path
  {{- end }}
{{- end }}
{{- end }}
